const express = require('express');
const router = express.Router();
const conn = require('../mariadb');
const { body, param, validationResult } = require('express-validator');

//jwt 모듈
const jwt = require('jsonwebtoken');
//dotenv 모듈
const dotenv = require('dotenv');
dotenv.config();

router.use(express.json());

const validate = (req, res, next) => {
    const err = validationResult(req);

    if (err.isEmpty()) {
        return next();//다음 할 일 (미들 웨어, 함수)
    } else {
        return res.status(400).json(err.array());
    }
};

router
    .route("/login")
    .post(
        [
            body('email').notEmpty().isEmail().withMessage('이메일을 확인해주세요'),
            body('password').notEmpty().isString().withMessage('비밀번호를 확인해주세요'),
            validate
        ]
        , (req, res, next) => {
            const { email, password } = req.body

            let sql = `SELECT * FROM users WHERE email = ?`
            conn.query(sql, email,
                function (err, results) {
                    if (err) {
                        console.log(err)
                        return res.status(400).end()
                    }

                    var loginUser = results[0]

                    if (loginUser && loginUser.password == password) {
                        //token발급
                        const token = jwt.sign({
                            email : loginUser.email,
                            name : loginUser.name
                        }, process.env.PRIVATE_KEY, {
                            expiresIn : '5m',
                            issuer : "songa"
                        });

                        res.cookie("token",token,{
                            httpOnly : true
                        })
                        
                        res.status(200).json({
                            message: `${loginUser.name}님 로그인 되었습니다.`,
                        })
                    } else {
                        res.status(403).json({
                            message: "이메일 또는 비밀번호가 틀렸습니다."
                        })
                    }
                }
            )
        })
